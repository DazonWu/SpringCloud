server:
  port: 8002
eureka:
  instance:
    hostname: server2
    #Eureka服务实例默认注册的InstanceIdshi 他的主机名(既一个主机只有一个服务)
    #这样会导致一个问题，一个主机只能启动一个Eureka服务，所以通过一串随机数标记他自身
    instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    status-page-url-path: /actuator/info
    health-check-url-path: /actuator/health
  client:
    #表明该服务不会像服务注册中心注册自己
    register-with-eureka: false
    #表明该服务不会像Eureka Server获取注册信息
    fetch-registry: true
    #Eureka Server 注册中西的地址，用于client 和 server交流
    service-url: #Eureka Server 注册中新的地址，用于client 和 server交流
      defaultZone: http://localhost:8001/eureka
  #是否启用自我保护
  server:
    enable-self-preservation: false
    #registry-sync-retries: 3
    #registry-sync-retry-wait-ms: 1000
    #max-time-for-replication: 30000 server批量同步相同服务实例信息到其他节点的延迟时间 remoteRegionRegistryFetchInterval
    #remote-region-registry-fetch-interval: 远程区域同步时间

spring:
  application:
    name: eureka-server2




